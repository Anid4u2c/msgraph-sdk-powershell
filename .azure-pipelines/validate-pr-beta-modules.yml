# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Validate pull requests to master and dev branches for Graph workload modules.
name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
pr:
  branches:
    include:
    - master
    - dev
    - milestone/*
  paths:
    include:
    - src/Beta/*
    - config/ModulesMapping.jsonc
trigger: none

variables:
  MODULE_MAPPING_BETA: '$(System.DefaultWorkingDirectory)/config/ModulesMappingBeta.jsonc'
  BUILD_NUMBER: $[format('{0:yyMMddHHmm}', pipeline.startTime)]

jobs:
- job: MSGraphPSSDKValidation
  displayName: MS Graph PS Service Module Validation
  timeoutInMinutes: 360
  pool:
    vmImage: 'windows-latest'
  
  steps:
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
    displayName: 'Run: CredScan'
    inputs:
     toolMajorVersion: V2
     debugMode: false
  
  - task: NodeTool@0
    displayName: 'Install: Node'
    inputs:
      versionSpec: '13.14.0'
  
  - task: Npm@1
    displayName: 'Install: AutoRest'
    inputs:
      command: 'custom'
      customCommand: 'install -g autorest'
  
  - task: PowerShell@2
    displayName: 'Generate and Build: Service Modules'
    inputs:
      filePath: '$(System.DefaultWorkingDirectory)/tools/GenerateModules.ps1'
      arguments: '-Build -ModulePreviewNumber $(BUILD_NUMBER)'
      pwsh: true
  
  - task: PowerShell@2
    displayName: 'Pack: Service Modules'
    inputs:
      targetType: 'inline'
      script: |
        [HashTable] $ModuleMapping = Get-Content $(MODULE_MAPPING_BETA) | ConvertFrom-Json -AsHashTable
        $ModuleMapping.Keys | ForEach-Object -Parallel {
            $ModuleName = $_
            & $(System.DefaultWorkingDirectory)/tools/PackModule.ps1 -Module $ModuleName -ArtifactsLocation $(Build.ArtifactStagingDirectory)
        }
      pwsh: true
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Service Modules'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: drop
  
  - task: YodLabs.O365PostMessage.O365PostMessageBuild.O365PostMessageBuild@0
    displayName: 'Graph Client Tooling pipeline fail notification'
    inputs:
      addressType: serviceEndpoint
      serviceEndpointName: 'microsoftgraph pipeline status'
      title: '$(Build.DefinitionName) failure notification'
      text: 'This pipeline has failed. View the build details for further information. This is a blocking failure. '
    condition: and(failed(), ne(variables['Build.Reason'], 'Manual'))
    enabled: false